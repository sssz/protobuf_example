// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

#include "addressbook.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_addressbook_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_addressbook_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_t1_MEntry_DoNotUse;
}  // namespace protobuf_addressbook_2eproto
namespace tutorial {
class t1_MEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<t1_MEntry_DoNotUse>
      _instance;
} _t1_MEntry_DoNotUse_default_instance_;
class t1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<t1>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
} _t1_default_instance_;
}  // namespace tutorial
namespace protobuf_addressbook_2eproto {
static void InitDefaultst1_MEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_t1_MEntry_DoNotUse_default_instance_;
    new (ptr) ::tutorial::t1_MEntry_DoNotUse();
  }
  ::tutorial::t1_MEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_t1_MEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultst1_MEntry_DoNotUse}, {}};

static void InitDefaultst1() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tutorial::_t1_default_instance_;
    new (ptr) ::tutorial::t1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::t1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_t1 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultst1}, {
      &protobuf_addressbook_2eproto::scc_info_t1_MEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_t1_MEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_t1.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1_MEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1_MEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1_MEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1_MEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1, b_),
  offsetof(::tutorial::t1DefaultTypeInternal, name_),
  offsetof(::tutorial::t1DefaultTypeInternal, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1, m_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::t1, one1_oneof_),
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::tutorial::t1_MEntry_DoNotUse)},
  { 9, 20, sizeof(::tutorial::t1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_t1_MEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_t1_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "addressbook.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021addressbook.proto\022\010tutorial\"\224\001\n\002t1\022\r\n\001"
      "a\030\001 \001(\005:\00210\022\t\n\001b\030\002 \001(\005\022\016\n\004name\030\003 \001(\tH\000\022\014"
      "\n\002id\030\004 \001(\005H\000\022\036\n\001m\030\005 \003(\0132\023.tutorial.t1.ME"
      "ntry\032(\n\006MEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001"
      "(\t:\0028\001B\014\n\none1_oneof"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "addressbook.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_addressbook_2eproto
namespace tutorial {

// ===================================================================

t1_MEntry_DoNotUse::t1_MEntry_DoNotUse() {}
t1_MEntry_DoNotUse::t1_MEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void t1_MEntry_DoNotUse::MergeFrom(const t1_MEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata t1_MEntry_DoNotUse::GetMetadata() const {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[0];
}
void t1_MEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void t1::InitAsDefaultInstance() {
  ::tutorial::_t1_default_instance_.name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::tutorial::_t1_default_instance_.id_ = 0;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int t1::kAFieldNumber;
const int t1::kBFieldNumber;
const int t1::kNameFieldNumber;
const int t1::kIdFieldNumber;
const int t1::kMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

t1::t1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_addressbook_2eproto::scc_info_t1.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.t1)
}
t1::t1(const t1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  m_.MergeFrom(from.m_);
  ::memcpy(&b_, &from.b_,
    static_cast<size_t>(reinterpret_cast<char*>(&a_) -
    reinterpret_cast<char*>(&b_)) + sizeof(a_));
  clear_has_one1_oneof();
  switch (from.one1_oneof_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kId: {
      set_id(from.id());
      break;
    }
    case ONE1_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tutorial.t1)
}

void t1::SharedCtor() {
  b_ = 0;
  a_ = 10;
  clear_has_one1_oneof();
}

t1::~t1() {
  // @@protoc_insertion_point(destructor:tutorial.t1)
  SharedDtor();
}

void t1::SharedDtor() {
  if (has_one1_oneof()) {
    clear_one1_oneof();
  }
}

void t1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* t1::descriptor() {
  ::protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const t1& t1::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_addressbook_2eproto::scc_info_t1.base);
  return *internal_default_instance();
}


void t1::clear_one1_oneof() {
// @@protoc_insertion_point(one_of_clear_start:tutorial.t1)
  switch (one1_oneof_case()) {
    case kName: {
      one1_oneof_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kId: {
      // No need to clear
      break;
    }
    case ONE1_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONE1_ONEOF_NOT_SET;
}


void t1::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.t1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  m_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    b_ = 0;
    a_ = 10;
  }
  clear_one1_oneof();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool t1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.t1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1 [default = 10];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.t1.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_one1_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &one1_oneof_.id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, string> m = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          t1_MEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              t1_MEntry_DoNotUse,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&m_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tutorial.t1.MEntry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.t1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.t1)
  return false;
#undef DO_
}

void t1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.t1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a = 1 [default = 10];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 b = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  switch (one1_oneof_case()) {
    case kName:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->name().data(), static_cast<int>(this->name().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "tutorial.t1.name");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        3, this->name(), output);
      break;
    case kId:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->id(), output);
      break;
    default: ;
  }
  // map<int32, string> m = 5;
  if (!this->m().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "tutorial.t1.MEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->m().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->m().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->m().begin();
          it != this->m().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<t1_MEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(m_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<t1_MEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->m().begin();
          it != this->m().end(); ++it) {
        entry.reset(m_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.t1)
}

::google::protobuf::uint8* t1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.t1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 a = 1 [default = 10];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 b = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  switch (one1_oneof_case()) {
    case kName:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->name().data(), static_cast<int>(this->name().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "tutorial.t1.name");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          3, this->name(), target);
      break;
    case kId:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->id(), target);
      break;
    default: ;
  }
  // map<int32, string> m = 5;
  if (!this->m().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormat::SERIALIZE,
          "tutorial.t1.MEntry.value");
      }
    };

    if (deterministic &&
        this->m().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->m().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->m().begin();
          it != this->m().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<t1_MEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(m_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::std::unique_ptr<t1_MEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->m().begin();
          it != this->m().end(); ++it) {
        entry.reset(m_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.t1)
  return target;
}

size_t t1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.t1)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // map<int32, string> m = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->m_size());
  {
    ::std::unique_ptr<t1_MEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->m().begin();
        it != this->m().end(); ++it) {
      entry.reset(m_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 b = 2;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // optional int32 a = 1 [default = 10];
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

  }
  switch (one1_oneof_case()) {
    // optional string name = 3;
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
      break;
    }
    // optional int32 id = 4;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
      break;
    }
    case ONE1_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void t1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.t1)
  GOOGLE_DCHECK_NE(&from, this);
  const t1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const t1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.t1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.t1)
    MergeFrom(*source);
  }
}

void t1::MergeFrom(const t1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.t1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  m_.MergeFrom(from.m_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000002u) {
      a_ = from.a_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.one1_oneof_case()) {
    case kName: {
      set_name(from.name());
      break;
    }
    case kId: {
      set_id(from.id());
      break;
    }
    case ONE1_ONEOF_NOT_SET: {
      break;
    }
  }
}

void t1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.t1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void t1::CopyFrom(const t1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.t1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool t1::IsInitialized() const {
  return true;
}

void t1::Swap(t1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void t1::InternalSwap(t1* other) {
  using std::swap;
  m_.Swap(&other->m_);
  swap(b_, other->b_);
  swap(a_, other->a_);
  swap(one1_oneof_, other->one1_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata t1::GetMetadata() const {
  protobuf_addressbook_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_addressbook_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tutorial
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tutorial::t1_MEntry_DoNotUse* Arena::CreateMaybeMessage< ::tutorial::t1_MEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::t1_MEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tutorial::t1* Arena::CreateMaybeMessage< ::tutorial::t1 >(Arena* arena) {
  return Arena::CreateInternal< ::tutorial::t1 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
